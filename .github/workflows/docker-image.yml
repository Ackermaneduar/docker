name: Docker Build, Test & Push

on:
  push:
    branches: ["main"]
  pull_request:

env:
  IMAGE_NAME: ${{ vars.DOCKER_USERNAME }}/my-image
  PYTHON_VERSION: "3.9"

jobs:
  quality-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install flake8 pylint pytest pytest-cov

      - name: Run linting
        run: flake8 src/ --count --show-source --statistics

      - name: Run static analysis
        run: pylint src/ --exit-zero

  build-and-test:
    needs: quality-metrics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          target: tester
          tags: ${{ steps.meta.outputs.tags }}-test
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run unit tests
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }}-test \
            pytest --cov=src --cov-report=xml tests/
          docker cp $(docker create --rm ${{ steps.meta.outputs.tags }}-test):/app/coverage.xml .

      - name: Security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}-test
          format: 'sarif'
          severity: 'CRITICAL,HIGH'

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true
